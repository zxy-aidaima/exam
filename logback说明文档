Logback主要建立于Logger、Appender 和 Layout 这三个类之上
	1.Logger:日志的记录器，把它关联到应用的对应的context上后，主要用于存放日志对象，
		也可以定义日志类型、级别。
	2.Appender:用于指定日志输出的目的地，目的地可以是控制台、文件、远程套接字服务器、
		 MySQL、 PostreSQL、Oracle和其他数据库、 JMS和远程UNIX Syslog守护进程等。
	3.Layout:负责把事件转换成字符串，格式化的日志信息的输出。
	4.配置文件详解
	4.1.根节点<configuration>
		scan:
			当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
		scanPeriod:
			设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
			当scan为true时，此属性生效。默认的时间间隔为1分钟。
		debug:
			当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。
			默认值为false。
	4.2.<appender>
		<appender>是<configuration>的子节点，是负责写日志的组件。<appender>有两个必要属性name和
		class。name指定appender名称，class指定appender的全限定名。
		RollingFileAppender:滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。
	4.3. <encoder>
		<encoder>:负责两件事，一是把日志信息转换成字节数组，二是把字节数组写入到输出流。
		目前PatternLayoutEncoder 是唯一有用的且默认的encoder ，有一个<pattern>节点，
		用来设置日志的输入格式。使用“%”加“转换符”方式，如果要输出“%”，则必须用“\”对“\%”进行转义。
	4.4.<logger>
		用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<logger>仅有
		一个name属性，一个可选的level和一个可选的addtivity属性。
		name:
			用来指定受此logger约束的某一个包或者具体的某一个类。
		level:
			用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
			还有一个特殊值INHERITED或者同义词NULL，代表强制执行上级的级别。如果未设置此属性，
			那么当前logger将会继承上级的级别。
		addtivity:
			是否向上级logger传递打印信息。默认是true。<logger>可以包含零个或多个<appender-ref>元素，
			标识这个appender将会添加到这个logger。
		<root>
			也是<logger>元素，但是它是根logger。只有一个level属性，应为已经被命名为"root".
			level:
				用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。
				默认是DEBUG。
			<root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger。